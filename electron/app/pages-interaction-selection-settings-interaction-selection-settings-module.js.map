{"version":3,"sources":["./src/app/pages/interaction-selection-settings/interaction-selection-settings.module.ts","./src/app/pages/interaction-selection-settings/interaction-selection-settings.page.ts","./src/app/pages/interaction-selection-settings/interaction-selection-settings.page.html"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8C;AACN;AACI;AACU;AACV;AACS;AAEmC;;;AAExF,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,qGAAgC;KAC5C;CACF;AAED;IAAA;KAIsD;yHAAzC,sCAAsC;0MAAtC,sCAAsC,kBAHxC,CAAC,4DAAY,EAAE,0DAAW,EAAE,0DAAW,EAAE,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,mEAAe,CAAC;iDAjBnG;CAoBsD;AAAH;mIAAtC,sCAAsC,mBAFlC,qGAAgC,aADrC,4DAAY,EAAE,0DAAW,EAAE,0DAAW,EAAE,8DAA+B,mEAAe;6FAGrF,sCAAsC;cAJlD,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,EAAE,0DAAW,EAAE,0DAAW,EAAE,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,mEAAe,CAAC;gBACjG,YAAY,EAAE,CAAC,qGAAgC,CAAC;aACjD;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnBgD;AAGmD;AAM7C;AACyB;AACT;;;;;;;;;;ICCrE,oEACsF;;;IAApF,0PAA8E;;;IAChF,oEACyF;;;IAAvF,6PAAiF;;;IAqBnF,oEAAmB;IAAA,uDAA8D;;IAAA,4DAAI;;IAAlE,0DAA8D;IAA9D,8KAA8D;;;;IAG/E,iFACE;IADwC,iVAAwB;IAChE,uDACF;;IAAA,4DAAa;;IADX,0DACF;IADE,4LACF;;;;IACA,iFACE;IADwC,2UAAkB;IAC1D,uDACF;;IAAA,4DAAa;;IADX,0DACF;IADE,4LACF;;AD/BJ;IAaE,0CACmB,iBAAoC,EACpC,aAA6B,EAC7B,kBAAsC;QAFtC,sBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,kBAAa,GAAb,aAAa,CAAgB;QAC7B,uBAAkB,GAAlB,kBAAkB,CAAoB;QAVlD,uBAAkB,GAA8B,4FAAkB;QAElE,WAAM,GAAY,KAAK;QAU5B,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,IAAI,CAAC,iBAAiB,CAAC,QAAQ,EAAE,CAAC;QACvD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,iBAAiB,CAAC,QAAQ,EAAE,CAAC,MAAM;QACtD,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,iBAAiB,CAAC,QAAQ,EAAE,CAAC,kBAAkB;IAChF,CAAC;IAEY,mDAAQ,GAArB;;;gBACE,IAAI,IAAI,CAAC,MAAM,EAAE;oBACf,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,iBAAiB,CAAC,QAAQ,EAAE,CAAC,MAAM;oBACtD,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,MAAM,CAAC,kBAAkB;iBACtD;qBAAM;oBACL,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC,eAAe,EAAE;oBAClD,OAAO,CAAC,GAAG,CAAC,YAAY,EAAE,IAAI,CAAC,MAAM,CAAC;oBACtC,IAAI,CAAC,eAAe;wBAClB,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,KAAK,sGAA4B,CAAC,EAAE;4BAC3E,CAAC,CAAC,4FAAkB,CAAC,cAAc;4BACnC,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,KAAK,sGAA4B,CAAC,QAAQ;gCACrF,CAAC,CAAC,4FAAkB,CAAC,WAAW;gCAChC,CAAC,CAAC,SAAS;oBACf,IAAI,CAAC,MAAM,CAAC,kBAAkB,GAAG,IAAI,CAAC,eAAe,IAAI,4FAAkB,CAAC,YAAY,EAAC,mCAAmC;oBAC5H,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,IAAI,4FAAkB,CAAC,UAAU,EAAC,mCAAmC;oBAChH,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,sGAAgB,CAAC,2FAAa,CAAC,cAAc,CAAC,CAAC;iBACxG;;;;KACF;IAEM,kEAAuB,GAA9B,UAA+B,eAAmC;QAChE,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC;QACtB,IAAI,CAAC,MAAM,CAAC,kBAAkB,GAAG,eAAe;QAChD,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,IAAI,CAAC,MAAM,CAAC;IACnD,CAAC;IAEM,uDAAY,GAAnB;QACE,IAAI,CAAC,kBAAkB,CAAC,gBAAgB,CAAC,IAAI,CAAC,kBAAkB,EAAE,IAAI,CAAC,MAAM,CAAC;IAChF,CAAC;IAEM,iDAAM,GAAb;QACE,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE;IAC/B,CAAC;oHAjDU,gCAAgC;oHAAhC,gCAAgC;YClB7C,gFACE;YAAA,8EACE;YAAA,iFACE;YAAA,6EAAmC;YACrC,4DAAc;YACd,4EACE;YAAA,uDACF;;YAAA,4DAAY;YACd,4DAAc;YAChB,4DAAa;YAEb,iFACE;YAAA,0HACiF;YACjF,0HACoF;YAEpF,qEAAG;YAAA,wDAAuD;;YAAA,4DAAI;YAE9D,+EACE;YAAA,sFACE;YAD2C,wLAAiB,mCAA+B,IAAC;YAC5F,+EACE;YAAA,gFAAyB;YAAA,wDAAkE;;YAAA,4DAAY;YACvG,2EAAgG;YAClG,4DAAW;YACX,+EACE;YAAA,gFAAyB;YAAA,wDAAuE;;YAAA,4DAAY;YAC5G,2EAAiG;YACnG,4DAAW;YACX,+EACE;YAAA,gFAAyB;YAAA,wDAA0E;;YAAA,4DAAY;YAC/G,2EAAoG;YACtG,4DAAW;YACb,4DAAkB;YACpB,4DAAW;YAEX,0HAAmB;YAEnB,+EACE;YAAA,6IACE;YAEF,6IACE;YAEJ,4DAAU;YACZ,4DAAc;;YAxCR,0DACF;YADE,oLACF;YAKE,0DAA0D;YAA1D,4HAA0D;YAE1D,0DAA6D;YAA7D,+HAA6D;YAG9D,0DAAuD;YAAvD,yKAAuD;YAGvC,0DAA2B;YAA3B,wFAA2B;YAEf,0DAAkE;YAAlE,oLAAkE;YAC/C,0DAAuC;YAAvC,oGAAuC;YAG1D,0DAAuE;YAAvE,yLAAuE;YACpD,0DAAwC;YAAxC,qGAAwC;YAG3D,0DAA0E;YAA1E,4LAA0E;YACvD,0DAA2C;YAA3C,wGAA2C;YAK1F,0DAAe;YAAf,6EAAe;YAGmD,0DAAe;YAAf,6EAAe;YAGrB,0DAAc;YAAd,4EAAc;;2CD1C/E;CAoEC;AAlD4C;6FAAhC,gCAAgC;cAL5C,uDAAS;eAAC;gBACT,QAAQ,EAAE,uCAAuC;gBACjD,WAAW,EAAE,4CAA4C;gBACzD,SAAS,EAAE,CAAC,4CAA4C,CAAC;aAC1D","file":"pages-interaction-selection-settings-interaction-selection-settings-module.js","sourcesContent":["import { CommonModule } from '@angular/common'\nimport { NgModule } from '@angular/core'\nimport { FormsModule } from '@angular/forms'\nimport { RouterModule, Routes } from '@angular/router'\nimport { IonicModule } from '@ionic/angular'\nimport { TranslateModule } from '@ngx-translate/core'\n\nimport { InteractionSelectionSettingsPage } from './interaction-selection-settings.page'\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: InteractionSelectionSettingsPage\n  }\n]\n\n@NgModule({\n  imports: [CommonModule, FormsModule, IonicModule, RouterModule.forChild(routes), TranslateModule],\n  declarations: [InteractionSelectionSettingsPage]\n})\nexport class InteractionSelectionSettingsPageModule {}\n","import { Component, OnInit } from '@angular/core'\n\nimport { Secret } from '../../models/secret'\nimport { ErrorCategory, handleErrorLocal } from '../../services/error-handler/error-handler.service'\nimport {\n  IInteractionOptions,\n  InteractionCommunicationType,\n  InteractionService,\n  InteractionSetting\n} from '../../services/interaction/interaction.service'\nimport { NavigationService } from '../../services/navigation/navigation.service'\nimport { SecretsService } from '../../services/secrets/secrets.service'\n\n@Component({\n  selector: 'airgap-interaction-selection-settings',\n  templateUrl: './interaction-selection-settings.page.html',\n  styleUrls: ['./interaction-selection-settings.page.scss']\n})\nexport class InteractionSelectionSettingsPage implements OnInit {\n  public interactionSetting: typeof InteractionSetting = InteractionSetting\n  public selectedSetting: InteractionSetting | undefined\n  public isEdit: boolean = false\n  private secret: Secret\n\n  private readonly interactionOptions: IInteractionOptions\n\n  constructor(\n    private readonly navigationService: NavigationService,\n    private readonly secretService: SecretsService,\n    private readonly interactionService: InteractionService\n  ) {\n    console.log('state', this.navigationService.getState())\n    this.isEdit = this.navigationService.getState().isEdit\n    this.interactionOptions = this.navigationService.getState().interactionOptions\n  }\n\n  public async ngOnInit(): Promise<void> {\n    if (this.isEdit) {\n      this.secret = this.navigationService.getState().secret\n      this.selectedSetting = this.secret.interactionSetting\n    } else {\n      this.secret = this.secretService.getActiveSecret()\n      console.log('SECRET SET', this.secret)\n      this.selectedSetting =\n        this.interactionOptions.communicationType === InteractionCommunicationType.QR\n          ? InteractionSetting.OFFLINE_DEVICE\n          : this.interactionOptions.communicationType === InteractionCommunicationType.DEEPLINK\n          ? InteractionSetting.SAME_DEVICE\n          : undefined\n      this.secret.interactionSetting = this.selectedSetting || InteractionSetting.UNDETERMINED // Default to store is undetermined\n      this.selectedSetting = this.selectedSetting || InteractionSetting.ALWAYS_ASK // Default to display is always ask\n      this.secretService.addOrUpdateSecret(this.secret).catch(handleErrorLocal(ErrorCategory.SECURE_STORAGE))\n    }\n  }\n\n  public onSelectedSettingChange(selectedSetting: InteractionSetting): void {\n    console.log('change!')\n    this.secret.interactionSetting = selectedSetting\n    this.secretService.addOrUpdateSecret(this.secret)\n  }\n\n  public goToNextPage(): void {\n    this.interactionService.startInteraction(this.interactionOptions, this.secret)\n  }\n\n  public goBack(): void {\n    this.navigationService.back()\n  }\n}\n","<ion-header no-border>\n  <ion-toolbar>\n    <ion-buttons slot=\"start\">\n      <ion-back-button></ion-back-button>\n    </ion-buttons>\n    <ion-title>\n      {{ 'interaction-selection-settings.title' | translate }}\n    </ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content class=\"ion-padding\">\n  <h3 *ngIf=\"selectedSetting === interactionSetting.SAME_DEVICE\"\n    [innerHTML]=\"'interaction-selection-settings.same-device_heading' | translate\"></h3>\n  <h3 *ngIf=\"selectedSetting === interactionSetting.OFFLINE_DEVICE\"\n    [innerHTML]=\"'interaction-selection-settings.offline-device_heading' | translate\"></h3>\n\n  <p>{{ 'interaction-selection-settings.text' | translate }}</p>\n\n  <ion-list lines=\"none\" class=\"ion-padding-vertical\">\n    <ion-radio-group [ngModel]=\"selectedSetting\" (ngModelChange)=\"onSelectedSettingChange($event)\">\n      <ion-item detail=\"false\" class=\"ion-no-padding\">\n        <ion-label color=\"white\">{{ 'interaction-selection-settings.selector.always' | translate }}</ion-label>\n        <ion-radio class=\"ion-no-margin\" slot=\"end\" [value]=\"interactionSetting.ALWAYS_ASK\"></ion-radio>\n      </ion-item>\n      <ion-item detail=\"false\" class=\"ion-no-padding\">\n        <ion-label color=\"white\">{{ 'interaction-selection-settings.selector.same-device' | translate }}</ion-label>\n        <ion-radio class=\"ion-no-margin\" slot=\"end\" [value]=\"interactionSetting.SAME_DEVICE\"></ion-radio>\n      </ion-item>\n      <ion-item detail=\"false\" class=\"ion-no-padding\">\n        <ion-label color=\"white\">{{ 'interaction-selection-settings.selector.offline-device' | translate }}</ion-label>\n        <ion-radio class=\"ion-no-margin\" slot=\"end\" [value]=\"interactionSetting.OFFLINE_DEVICE\"></ion-radio>\n      </ion-item>\n    </ion-radio-group>\n  </ion-list>\n\n  <p *ngIf=\"!isEdit\">{{ 'interaction-selection-settings.description' | translate }}</p>\n\n  <ion-fab vertical=\"bottom\" horizontal=\"end\" slot=\"fixed\">\n    <ion-button color=\"primary\" shape=\"round\" (click)=\"goToNextPage()\" *ngIf=\"!isEdit\">\n      {{ 'interaction-selection-settings.continue_label' | translate }}\n    </ion-button>\n    <ion-button color=\"primary\" shape=\"round\" (click)=\"goBack()\" *ngIf=\"isEdit\">\n      {{ 'interaction-selection-settings.continue_label' | translate }}\n    </ion-button>\n  </ion-fab>\n</ion-content>"],"sourceRoot":"webpack:///"}