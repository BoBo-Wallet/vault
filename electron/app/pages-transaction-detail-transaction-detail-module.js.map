{"version":3,"sources":["./src/app/pages/transaction-detail/transaction-detail.module.ts","./src/app/pages/transaction-detail/transaction-detail.page.ts","./src/app/pages/transaction-detail/transaction-detail.page.html"],"names":[],"mappings":"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","file":"pages-transaction-detail-transaction-detail-module.js","sourcesContent":["import { CommonModule } from '@angular/common'\nimport { NgModule } from '@angular/core'\nimport { FormsModule } from '@angular/forms'\nimport { RouterModule, Routes } from '@angular/router'\nimport { IonicModule } from '@ionic/angular'\nimport { TranslateModule } from '@ngx-translate/core'\n\nimport { ComponentsModule } from '../../components/components.module'\n\nimport { TransactionDetailPage } from './transaction-detail.page'\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TransactionDetailPage\n  }\n]\n\n@NgModule({\n  imports: [CommonModule, ComponentsModule, FormsModule, IonicModule, RouterModule.forChild(routes), TranslateModule],\n  declarations: [TransactionDetailPage]\n})\nexport class TransactionDetailPageModule {}\n","import { Component } from '@angular/core'\nimport { AirGapWallet, IACMessageDefinitionObject, IACMessageType, IAirGapTransaction, UnsignedTransaction } from '@bobo-wallet/coin-lib'\nimport * as bip39 from 'bip39'\n\nimport { Secret } from '../../models/secret'\nimport { handleErrorLocal, ErrorCategory } from '../../services/error-handler/error-handler.service'\nimport { InteractionOperationType, InteractionService } from '../../services/interaction/interaction.service'\nimport { NavigationService } from '../../services/navigation/navigation.service'\nimport { SecretsService } from '../../services/secrets/secrets.service'\nimport { SerializerService } from '../../services/serializer/serializer.service'\nimport { AlertController } from '@ionic/angular'\n\n// TODO: refactor multiple transactions\n@Component({\n  selector: 'airgap-transaction-detail',\n  templateUrl: './transaction-detail.page.html',\n  styleUrls: ['./transaction-detail.page.scss']\n})\nexport class TransactionDetailPage {\n  public broadcastUrl?: string\n\n  public transactionsWithWallets: [UnsignedTransaction, AirGapWallet][]\n  public airGapTxs: IAirGapTransaction[]\n  public deserializedSync: IACMessageDefinitionObject[]\n\n  constructor(\n    private readonly alertController: AlertController,\n    private readonly navigationService: NavigationService,\n    private readonly secretsService: SecretsService,\n    private readonly interactionService: InteractionService,\n    private readonly serializerService: SerializerService\n  ) {}\n\n  public async ionViewWillEnter(): Promise<void> {\n    const state = this.navigationService.getState()\n    if (state.transactionsWithWallets) {\n      this.transactionsWithWallets = state.transactionsWithWallets\n      this.deserializedSync = state.deserializedSync\n      console.log('deserialized sync', this.deserializedSync)\n      try {\n        this.airGapTxs = (\n          await Promise.all(\n            this.transactionsWithWallets.map((pair: [UnsignedTransaction, AirGapWallet]) => pair[1].protocol.getTransactionDetails(pair[0]))\n          )\n        ).reduce((flatten, toFlatten) => flatten.concat(toFlatten), [])\n      } catch (e) {\n        console.log('cannot read tx details', e)\n      }\n    }\n  }\n\n  public async signAndGoToNextPage(): Promise<void> {\n    try {\n      const signedTxs: string[] = await Promise.all(\n        this.transactionsWithWallets.map((pair: [UnsignedTransaction, AirGapWallet]) => this.signTransaction(pair[0], pair[1]))\n      )\n      this.broadcastUrl = await this.generateBroadcastUrl(this.transactionsWithWallets, signedTxs)\n\n      this.interactionService.startInteraction(\n        {\n          operationType: InteractionOperationType.TRANSACTION_BROADCAST,\n          url: this.broadcastUrl,\n          wallets: this.transactionsWithWallets.map((pair) => pair[1]),\n          signedTxs,\n          transactions: this.transactionsWithWallets.map((pair) => pair[0])\n        },\n        this.secretsService.getActiveSecret()\n      )\n    } catch (error) {\n      console.log('Caught error: ', error)\n      if (error.message) {\n        this.showAlert('Error', error.message)\n      }\n    }\n  }\n\n  public async generateBroadcastUrl(transactionsWithWallets: [UnsignedTransaction, AirGapWallet][], signedTxs: string[]): Promise<string> {\n    let txDetails: IAirGapTransaction[] | undefined\n\n    try {\n      const transactions = (\n        await Promise.all(\n          transactionsWithWallets.map((pair: [UnsignedTransaction, AirGapWallet]) => pair[1].protocol.getTransactionDetails(pair[0]))\n        )\n      ).reduce((flatten, toFlatten) => flatten.concat(toFlatten), [])\n      console.log(transactions)\n\n      txDetails = transactions\n    } catch (e) {\n      handleErrorLocal(e)\n    }\n\n    if (txDetails && txDetails.length > 0) {\n      const deserializedTxSigningRequests: IACMessageDefinitionObject[] = transactionsWithWallets.map(\n        (pair: [UnsignedTransaction, AirGapWallet], index: number) => ({\n          protocol: pair[1].protocol.identifier,\n          type: IACMessageType.TransactionSignResponse,\n          payload: {\n            accountIdentifier: pair[1].publicKey.substr(-6),\n            transaction: signedTxs[index],\n            from: txDetails[index].from,\n            amount: txDetails[index].amount,\n            fee: txDetails[index].fee,\n            to: txDetails[index].to\n          }\n        })\n      )\n\n      const serializedTx: string[] = await this.serializerService.serialize(deserializedTxSigningRequests)\n\n      return `${transactionsWithWallets[0][0].callback || 'bobo-wallet://?d='}${serializedTx.join(',')}`\n    } else {\n      throw new Error('Could not get transaction details')\n    }\n  }\n\n  public async signTransaction(transaction: UnsignedTransaction, wallet: AirGapWallet): Promise<string> {\n    const secret: Secret | undefined = this.secretsService.findByPublicKey(wallet.publicKey)\n\n    // we should handle this case here as well\n    if (!secret) {\n      console.warn('no secret found for this public key')\n      throw new Error('no secret found for this public key')\n    }\n\n    const entropy = await this.secretsService.retrieveEntropyForSecret(secret)\n    const mnemonic: string = bip39.entropyToMnemonic(entropy)\n\n    if (await this.checkIfPublicKeysMatch(transaction, wallet, mnemonic, '')) {\n      // Public keys match, so no BIP-39 passphrase has been set\n      return this.sign(transaction, wallet, mnemonic, '')\n    }\n\n    return this.sign(transaction, wallet, mnemonic, await this.showBip39PassphraseAlert())\n  }\n\n  private async showBip39PassphraseAlert(): Promise<string> {\n    return new Promise(async (resolve) => {\n      const alert: HTMLIonAlertElement = await this.alertController.create({\n        header: 'BIP-39 Passphrase',\n        message: 'If you have set a BIP-39 passphrase, please enter it here.',\n        backdropDismiss: false,\n        inputs: [\n          {\n            name: 'bip39Passphrase',\n            type: 'password',\n            placeholder: 'Passphrase'\n          }\n        ],\n        buttons: [\n          {\n            text: 'Ok',\n            handler: async (result) => {\n              const bip39Passphrase = result.bip39Passphrase ?? ''\n\n              resolve(bip39Passphrase)\n            }\n          }\n        ]\n      })\n      alert.present().catch(handleErrorLocal(ErrorCategory.IONIC_ALERT))\n    })\n  }\n\n  private async showBip39PassphraseMismatchAlert(): Promise<void> {\n    const alert: HTMLIonAlertElement = await this.alertController.create({\n      header: 'BIP-39 Passphrase',\n      message: 'Public keys do not match. Did you enter the correct BIP-39 Passphrase?',\n      backdropDismiss: false,\n      buttons: [\n        {\n          text: 'Ok'\n        }\n      ]\n    })\n    alert.present().catch(handleErrorLocal(ErrorCategory.IONIC_ALERT))\n    throw new Error('Public keys do not match. Did you enter the correct BIP-39 Passphrase?')\n  }\n\n  private async sign(\n    transaction: UnsignedTransaction,\n    wallet: AirGapWallet,\n    mnemonic: string,\n    bip39Passphrase: string = ''\n  ): Promise<string> {\n    if (wallet.isExtendedPublicKey) {\n      const extendedPrivateKey: string = await wallet.protocol.getExtendedPrivateKeyFromMnemonic(\n        mnemonic,\n        wallet.derivationPath,\n        bip39Passphrase\n      )\n      if (!(await this.checkIfPublicKeysMatch(transaction, wallet, mnemonic, bip39Passphrase))) {\n        throw this.showBip39PassphraseMismatchAlert()\n      }\n\n      return wallet.protocol.signWithExtendedPrivateKey(extendedPrivateKey, transaction.transaction)\n    } else {\n      const privateKey: Buffer = await wallet.protocol.getPrivateKeyFromMnemonic(mnemonic, wallet.derivationPath, bip39Passphrase)\n\n      if (!(await this.checkIfPublicKeysMatch(transaction, wallet, mnemonic, bip39Passphrase))) {\n        throw this.showBip39PassphraseMismatchAlert()\n      }\n\n      return wallet.protocol.signWithPrivateKey(privateKey, transaction.transaction)\n    }\n  }\n\n  public async showAlert(title: string, message: string): Promise<void> {\n    const alert: HTMLIonAlertElement = await this.alertController.create({\n      header: title,\n      message,\n      backdropDismiss: false,\n      buttons: [\n        {\n          text: 'Okay!',\n          role: 'cancel'\n        }\n      ]\n    })\n    alert.present().catch(handleErrorLocal(ErrorCategory.IONIC_ALERT))\n  }\n\n  private async checkIfPublicKeysMatch(\n    transaction: UnsignedTransaction,\n    wallet: AirGapWallet,\n    mnemonic: string,\n    bip39Passphrase: string = ''\n  ) {\n    const publicKey: string = await wallet.protocol.getPublicKeyFromMnemonic(mnemonic, wallet.derivationPath, bip39Passphrase)\n\n    return transaction.publicKey === publicKey\n  }\n}\n","<ion-header no-border>\n  <ion-toolbar>\n    <ion-buttons slot=\"start\">\n      <ion-back-button></ion-back-button>\n    </ion-buttons>\n    <ion-title>\n      {{ 'transaction-detail.title' | translate }}\n    </ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content class=\"ion-padding\">\n  <h3>{{ 'transaction-detail.text' | translate }}</h3>\n  <airgap-signed-transaction [unsignedTxs]=\"deserializedSync\"></airgap-signed-transaction>\n\n  <ion-fab vertical=\"bottom\" horizontal=\"end\" slot=\"fixed\">\n    <ion-button color=\"primary\" shape=\"round\" (click)=\"signAndGoToNextPage()\">\n      <ion-icon slot=\"start\" src=\"assets/icons/md-check.svg\"></ion-icon>\n      {{ 'transaction-detail.sign-tx_label' | translate }}\n    </ion-button>\n  </ion-fab>\n</ion-content>\n"],"sourceRoot":"webpack:///"}